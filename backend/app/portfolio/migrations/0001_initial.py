# Generated by Django 4.2.9 on 2024-01-15 16:33

from decimal import Decimal
import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BackTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('group', models.CharField(blank=True, choices=[('All trades', 'All Trades Test'), ('Long trades', 'Long Trades Test'), ('Short trades', 'Short Trades Test')], max_length=255, null=True)),
                ('contract_type', models.CharField(default='regular', max_length=255)),
                ('period', models.DateField(blank=True, null=True)),
                ('monthly', models.BooleanField(default=False)),
                ('total_net_profit', models.DecimalField(decimal_places=15, default=Decimal('0'), max_digits=24, verbose_name='Total net profit')),
                ('gross_profit', models.DecimalField(decimal_places=15, default=Decimal('0'), max_digits=24, verbose_name='Gross profit')),
                ('gross_loss', models.DecimalField(decimal_places=15, default=Decimal('0'), max_digits=24, verbose_name='Gross loss')),
                ('commission', models.DecimalField(decimal_places=15, default=Decimal('0'), max_digits=24, verbose_name='Commission')),
                ('profit_factor', models.DecimalField(decimal_places=15, default=Decimal('0'), max_digits=24, verbose_name='Profit factor')),
                ('max_drawdown', models.DecimalField(decimal_places=15, default=Decimal('0'), max_digits=24, verbose_name='Max. drawdown')),
                ('sharpe_ratio', models.DecimalField(decimal_places=15, default=Decimal('0'), max_digits=24, verbose_name='Sharpe ratio')),
                ('sortino_ratio', models.DecimalField(decimal_places=15, default=Decimal('0'), max_digits=24, verbose_name='Sortino ratio')),
                ('ulcer_index', models.DecimalField(decimal_places=15, default=Decimal('0'), max_digits=24, verbose_name='Ulcer index')),
                ('r_squared', models.DecimalField(decimal_places=15, default=Decimal('0'), max_digits=24, verbose_name='R squared')),
                ('probability', models.DecimalField(decimal_places=15, default=Decimal('0'), max_digits=24, verbose_name='Probability')),
                ('total_of_trades', models.IntegerField(default=0, verbose_name='Total # of trades')),
                ('percent_profitable', models.DecimalField(decimal_places=15, default=Decimal('0'), max_digits=24, verbose_name='Percent profitable')),
                ('winning_trades', models.IntegerField(default=0, verbose_name='# of winning trades')),
                ('losing_trades', models.IntegerField(default=0, verbose_name='# of losing trades')),
                ('even_trades', models.IntegerField(default=0, verbose_name='# of even trades')),
                ('total_slippage', models.IntegerField(default=0, verbose_name='# of even trades')),
                ('avg_trade', models.DecimalField(decimal_places=15, default=Decimal('0'), max_digits=24, verbose_name='Avg. trade')),
                ('avg_winning_trade', models.DecimalField(decimal_places=15, default=Decimal('0'), max_digits=24, verbose_name='Avg. winning trade')),
                ('avg_losing_trade', models.DecimalField(decimal_places=15, default=Decimal('0'), max_digits=24, verbose_name='Avg. losing trade')),
                ('ratio_win_loss', models.DecimalField(decimal_places=15, default=Decimal('0'), max_digits=24, verbose_name='Ratio avg. win / avg. loss')),
                ('max_consec_winners', models.IntegerField(default=0, verbose_name='Max. consec. winners')),
                ('max_consec_losers', models.IntegerField(default=0, verbose_name='Ratio avg. win / avg. loss')),
                ('largest_winning_trade', models.DecimalField(decimal_places=15, default=Decimal('0'), max_digits=24, verbose_name='Largest winning trade')),
                ('largest_losing_trade', models.DecimalField(decimal_places=15, default=Decimal('0'), max_digits=24, verbose_name='Largest losing trade')),
                ('avg_trades_per_day', models.DecimalField(decimal_places=15, default=Decimal('0'), max_digits=24, verbose_name='Avg. # of trades per day')),
                ('avg_time_in_market', models.DecimalField(decimal_places=15, default=Decimal('0'), max_digits=24, verbose_name='Avg. time in market')),
                ('avg_bars_in_trade', models.DecimalField(decimal_places=15, default=Decimal('0'), max_digits=24, verbose_name='Avg. bars in trade')),
                ('profit_per_month', models.DecimalField(decimal_places=15, default=Decimal('0'), max_digits=24, verbose_name='Profit per month')),
                ('max_time_to_recover', models.DecimalField(decimal_places=15, default=Decimal('0'), max_digits=24, verbose_name='Max. time to recover')),
                ('longest_flat_period', models.DecimalField(decimal_places=15, default=Decimal('0'), max_digits=24, verbose_name='Longest flat period')),
                ('avg_mae', models.DecimalField(decimal_places=15, default=Decimal('0'), max_digits=24, verbose_name='Avg. MAE')),
                ('avg_mfe', models.DecimalField(decimal_places=15, default=Decimal('0'), max_digits=24, verbose_name='Avg. MFE')),
                ('avg_etd', models.DecimalField(decimal_places=15, default=Decimal('0'), max_digits=24, verbose_name='Avg. MFE')),
                ('avg_trades_per_quarter', models.IntegerField(default=0)),
                ('profit_per_quarter', models.DecimalField(decimal_places=15, default=Decimal('0'), max_digits=24, verbose_name='Profit per quarter')),
                ('month', models.DateTimeField(auto_now=True, verbose_name='modified')),
                ('years', models.IntegerField(blank=True, default=None, null=True, verbose_name='years')),
                ('months', models.IntegerField(blank=True, default=None, null=True, verbose_name='months')),
                ('version', models.CharField(blank=True, max_length=255, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modified')),
                ('check_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('config', models.JSONField(default=dict, verbose_name='config')),
                ('contracts', models.JSONField(default=dict, verbose_name='contracts')),
            ],
            options={
                'verbose_name': 'Back Test',
                'verbose_name_plural': 'Back Test',
                'db_table': 'back_test',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('color', models.CharField(max_length=64)),
                ('index', models.IntegerField(default=0)),
                ('config', models.JSONField(default=dict)),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'db_table': 'categories',
            },
        ),
        migrations.CreateModel(
            name='CommissionLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='created')),
                ('modified', models.DateTimeField(auto_now=True, null=True, verbose_name='modified')),
                ('name', models.CharField(max_length=64)),
                ('long_name', models.CharField(max_length=255)),
                ('low', models.FloatField(default=0)),
                ('medium', models.FloatField(default=0)),
                ('high', models.FloatField(default=0)),
            ],
            options={
                'db_table': 'commission_level',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ConfigMapper',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.CharField(max_length=255, null=True)),
                ('name', models.CharField(max_length=255)),
                ('config', models.JSONField(default=dict)),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='created')),
                ('modified', models.DateTimeField(auto_now=True, null=True, verbose_name='modified')),
            ],
            options={
                'db_table': 'config_mapper',
            },
        ),
        migrations.CreateModel(
            name='Market',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_name', models.CharField(max_length=255)),
                ('long_name', models.CharField(max_length=255)),
                ('regular', models.CharField(blank=True, max_length=10, null=True)),
                ('micro', models.CharField(blank=True, max_length=10, null=True)),
                ('point_value', models.FloatField(default=50)),
            ],
        ),
        migrations.CreateModel(
            name='Portfolio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('sku', models.CharField(max_length=255)),
                ('group', models.CharField(choices=[('Normal', 'normal'), ('Pro', 'pro')], default='', max_length=255)),
                ('crm_name', models.CharField(blank=True, max_length=255, null=True)),
                ('number_of_bot', models.IntegerField(default=1)),
                ('tab', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('quarter', models.DecimalField(blank=True, db_index=True, decimal_places=15, default=Decimal('0'), max_digits=24, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Billed Quarterly')),
                ('active', models.BooleanField(default=False)),
                ('year', models.DecimalField(decimal_places=15, default=Decimal('0'), max_digits=24)),
                ('tags', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=64), blank=True, default=list, size=None)),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='created')),
                ('modified', models.DateTimeField(auto_now=True, null=True, verbose_name='modified')),
            ],
            options={
                'verbose_name': 'portfolio',
                'verbose_name_plural': 'portfolios',
                'db_table': 'portfolios',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PortfolioCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('color', models.CharField(max_length=64)),
                ('index', models.IntegerField(default=0)),
                ('config', models.JSONField(default=dict)),
            ],
            options={
                'verbose_name_plural': 'Portfolio Categories',
                'db_table': 'portfolio_categories',
            },
        ),
        migrations.CreateModel(
            name='Robot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('crm_name', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('tags', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=64), blank=True, default=list, size=None)),
                ('group', models.CharField(choices=[('Normal', 'normal'), ('Pro', 'pro')], default='', max_length=255)),
                ('regular', models.CharField(blank=True, max_length=10, null=True)),
                ('micro', models.CharField(blank=True, max_length=10, null=True)),
                ('instruments', models.JSONField(default=list)),
                ('markets_long', models.CharField(blank=True, max_length=255, null=True)),
                ('sku', models.CharField(default='', max_length=255, null=True)),
                ('market_type', models.CharField(blank=True, max_length=255, null=True)),
                ('edge_ratio', models.DecimalField(blank=True, db_index=True, decimal_places=4, default=Decimal('0'), max_digits=24, null=True, verbose_name='edge ratio')),
                ('quarter', models.DecimalField(blank=True, db_index=True, decimal_places=15, default=Decimal('0'), max_digits=24, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Billed Quarterly')),
                ('active', models.BooleanField(default=True)),
                ('has_new_data', models.BooleanField(default=False)),
                ('pro', models.BooleanField(default=False)),
                ('normal', models.BooleanField(default=True)),
                ('year', models.DecimalField(blank=True, db_index=True, decimal_places=15, default=Decimal('0'), max_digits=24, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Billed Yearly')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='created')),
                ('modified', models.DateTimeField(auto_now=True, null=True, verbose_name='modified')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='portfolio.category')),
                ('markets', models.ManyToManyField(blank=True, related_name='robots', to='portfolio.market')),
            ],
            options={
                'verbose_name': 'Robot',
                'verbose_name_plural': 'Robots',
                'db_table': 'robots',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Trade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('signal_name', models.CharField(blank=True, max_length=64, null=True)),
                ('account', models.CharField(blank=True, max_length=255, null=True)),
                ('brand', models.CharField(blank=True, max_length=64, null=True)),
                ('product_sku', models.CharField(blank=True, max_length=64, null=True)),
                ('bars_period_type', models.CharField(blank=True, max_length=64, null=True)),
                ('bars_period_value', models.IntegerField(default=0, null=True)),
                ('number', models.IntegerField(default=0, null=True, verbose_name='Trade number')),
                ('instrument', models.CharField(blank=True, max_length=64, null=True, verbose_name='Instrument')),
                ('raw_instrument', models.CharField(blank=True, max_length=64, null=True, verbose_name='Raw Instrument')),
                ('market_pos', models.CharField(blank=True, max_length=64, null=True, verbose_name='Market pos')),
                ('quantity', models.IntegerField(default=0, null=True, verbose_name='Qty')),
                ('entry_price', models.DecimalField(decimal_places=15, default=Decimal('0'), max_digits=24, null=True, verbose_name='Entry price')),
                ('exit_price', models.DecimalField(decimal_places=15, default=Decimal('0'), max_digits=24, null=True, verbose_name='Exit price')),
                ('entry_time', models.DateTimeField(default=None, null=True, verbose_name='Entry time')),
                ('exit_time', models.DateTimeField(default=None, null=True, verbose_name='Exit time')),
                ('entry_name', models.CharField(default=None, max_length=255, null=True, verbose_name='Entry name')),
                ('exit_name', models.CharField(default=None, max_length=255, null=True, verbose_name='Exit name')),
                ('profit', models.DecimalField(decimal_places=15, default=Decimal('0'), max_digits=24, null=True, verbose_name='Profit')),
                ('cum_net_profit', models.DecimalField(decimal_places=15, default=Decimal('0'), max_digits=24, null=True, verbose_name='Cum. net profit')),
                ('commission', models.DecimalField(decimal_places=15, default=Decimal('0'), max_digits=24, null=True, verbose_name='Commission')),
                ('mae', models.DecimalField(decimal_places=15, default=Decimal('0'), max_digits=24, null=True, verbose_name='MAE')),
                ('mfe', models.DecimalField(decimal_places=15, default=Decimal('0'), max_digits=24, null=True, verbose_name='MFE')),
                ('etd', models.DecimalField(decimal_places=15, default=Decimal('0'), max_digits=24, null=True, verbose_name='ETD')),
                ('bars', models.DecimalField(decimal_places=15, default=Decimal('0'), max_digits=24, null=True, verbose_name='Bars')),
                ('entry_efficiency', models.DecimalField(decimal_places=15, default=Decimal('0'), max_digits=24)),
                ('exit_efficiency', models.DecimalField(decimal_places=15, default=Decimal('0'), max_digits=24)),
                ('mae_currency', models.DecimalField(decimal_places=15, default=Decimal('0'), max_digits=24, null=True)),
                ('mae_percent', models.DecimalField(decimal_places=15, default=Decimal('0'), max_digits=24, null=True)),
                ('mae_pips', models.DecimalField(decimal_places=15, default=Decimal('0'), max_digits=24, null=True)),
                ('mae_points', models.DecimalField(decimal_places=15, default=Decimal('0'), max_digits=24, null=True)),
                ('mae_ticks', models.DecimalField(decimal_places=15, default=Decimal('0'), max_digits=24, null=True)),
                ('mfe_currency', models.DecimalField(decimal_places=15, default=Decimal('0'), max_digits=24, null=True)),
                ('mfe_percent', models.DecimalField(decimal_places=15, default=Decimal('0'), max_digits=24, null=True)),
                ('mfe_pips', models.DecimalField(decimal_places=15, default=Decimal('0'), max_digits=24, null=True)),
                ('mfe_points', models.DecimalField(decimal_places=15, default=Decimal('0'), max_digits=24, null=True)),
                ('mfe_ticks', models.DecimalField(decimal_places=15, default=Decimal('0'), max_digits=24, null=True)),
                ('profit_currency', models.DecimalField(decimal_places=15, default=Decimal('0'), max_digits=24, null=True)),
                ('profit_percent', models.DecimalField(decimal_places=15, default=Decimal('0'), max_digits=24, null=True)),
                ('profit_pips', models.DecimalField(decimal_places=15, default=Decimal('0'), max_digits=24, null=True)),
                ('profit_points', models.DecimalField(decimal_places=15, default=Decimal('0'), max_digits=24, null=True)),
                ('profit_ticks', models.DecimalField(decimal_places=15, default=Decimal('0'), max_digits=24, null=True)),
                ('total_efficiency', models.DecimalField(decimal_places=15, default=Decimal('0'), max_digits=24)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modified')),
                ('robot', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='portfolio.robot')),
            ],
            options={
                'db_table': 'trades',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='PortfolioRobot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('market', models.CharField(blank=True, max_length=10, null=True)),
                ('number_of_contract', models.IntegerField(default=1)),
                ('config', models.JSONField(default=dict)),
                ('portfolio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='portfolio.portfolio')),
                ('robot', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='portfolio.robot')),
            ],
            options={
                'verbose_name': 'Portfolio Robot',
                'verbose_name_plural': 'Portfolio Robot',
                'db_table': 'portfolio_robot',
            },
        ),
        migrations.AddField(
            model_name='portfolio',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='portfolio.portfoliocategory'),
        ),
        migrations.AddField(
            model_name='portfolio',
            name='robot',
            field=models.ManyToManyField(blank=True, related_name='portfolios', through='portfolio.PortfolioRobot', to='portfolio.robot'),
        ),
        migrations.CreateModel(
            name='DataBackTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monthly_data', models.JSONField(default=dict)),
                ('net_monthly', models.JSONField(default=dict)),
                ('net_daily', models.JSONField(default=dict)),
                ('net_weekly', models.JSONField(default=dict)),
                ('drawdown_monthly', models.JSONField(default=dict)),
                ('drawdown_cum_monthly', models.JSONField(default=dict)),
                ('drawdown_weekly', models.JSONField(default=dict)),
                ('drawdown_daily', models.JSONField(default=dict)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modified')),
                ('backtest', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='portfolio.backtest')),
            ],
            options={
                'verbose_name': 'Back Test Data',
                'verbose_name_plural': 'Back Test Data',
                'db_table': 'back_test_data',
                'ordering': ['-created'],
            },
        ),
        migrations.AddField(
            model_name='backtest',
            name='robot',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='portfolio.robot'),
        ),
        migrations.CreateModel(
            name='Addon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('crm_name', models.CharField(blank=True, max_length=255, null=True)),
                ('sku', models.CharField(max_length=255)),
                ('quarter', models.DecimalField(blank=True, db_index=True, decimal_places=15, default=Decimal('0'), max_digits=24, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Billed Quarterly')),
                ('year', models.DecimalField(db_index=True, decimal_places=15, default=Decimal('0'), max_digits=24, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Billed Yearly ')),
                ('tags', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=64), blank=True, default=list, size=None)),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='created')),
                ('modified', models.DateTimeField(auto_now=True, null=True, verbose_name='modified')),
                ('robots', models.ManyToManyField(to='portfolio.robot')),
            ],
            options={
                'verbose_name': 'addon',
                'verbose_name_plural': 'addons',
                'db_table': 'addons',
                'ordering': ['name'],
            },
        ),
    ]
